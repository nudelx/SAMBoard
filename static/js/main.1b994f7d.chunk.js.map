{"version":3,"sources":["tools/badge.js","tools/bugsBadge.js","tools/envNames.js","cards/cardHeader.js","cards/cardBody.js","tools/fields.js","tools/constants.js","cards/user.js","tools/TimeAgo.js","tools/timeStampParser.js","cards/fieldsList.js","tests/testBox.js","tests/testLoadingBox.js","tests/testsBody.js","cards/Card.js","tools/threadsDataParser.js","board/Carousel.js","board/Slide.js","header/statusBlock.js","header/header.js","cards/BugCard.js","board/board.js","cards/notification.js","cards/bb8.js","config/configRow.js","config/buttons.js","config/configBox.js","config/burgerButton.js","config/config.js","firebase/fb_config.js","cards/timeCard.js","header/appHeader.js","tools/cacheTool.js","App.js","index.js","registerServiceWorker.js"],"names":["Badge","_ref","value","statusClass","react_default","a","createElement","className","concat","ENV_NAMES","esd","cmdb","mm","MM_stage","MM_stage2","MM_us","MM_eu","CardHeader","type","env","bugs","bugsBadge","badge","CardBody","children","FIELDS","deploys","installation","tests","SKIP_FIELDS","date","branch","tag","getFields","testState","User","user","cleanUser","replace","alt","src","TimeAgo","state","timeAgo","timestamp","this","props","delta","Date","getTime","days","Math","floor","hrs","mnts","secs","buildTimeStr","setState","_this2","setInterval","calculateTime","timeAgoTimer","Component","getValue","field","data","TimeAgo_TimeAgo","cards_user","FieldsList","fields","to_skip","map","f","key","getField","TestBox","name","failed","total","percent","getSeverityStyle","TestLoadingBox","getComponent","component","renderTestBoxes","browsers","threadsRunning","browsersCount","Object","keys","length","testLoadingBox","boxes","forEach","browser","browserData","push","testBox","some","t","running","TestsBody","status","testsStatusText","Card","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","version","passed","threads","_this$props","firebase","ref","child","on","snap","val","JSON","parse","localStorage","getItem","newObj","thread","threadData","parseInt","parseThreadField","threads_running","testsRunning","testsFailed","createStateObj","_this3","fieldsData","_this$state","reduce","_this$props2","extractDataFromState","cardHeader","cardBody","fieldsList","testsBody","Carousel","slidesCount","showIndex","windowWidth","timer","offSet","timerValue","enableCarousel","showOnlySlide","enableTimer","setTotalSlides","nextProps","console","log","clearInterval","margin","refs","slideClosure","offsetWidth","Slide","style","objectSpread","transition","StatusBlock","envName","_ref2","dirty","classStatus","displayStatus","displayUser","Header","title","statusBlock","assign","React","constLinks","SMILE","SAD","HYSTERICAL","BLOCK_GOOD","BLOCK_BAD","QUE_GOOD","QUE_BAD","BUGS_URL","SSF_BLOCK","SSP_BLOCK","SSP_ALL","SSF_ALL","getData","axios","get","then","resp","Items","match","slicedToArray","_GOOD","_BAD","level","getLevel","Board","header_Header","board_Carousel","board_Slide","marginLeft","cards_Card","BugCard_default","Notification","samboardKey","show","setTimeout","fxClass","ver","require","old","setItem","stringify","activateSlide","activateSelfKill","toLocaleDateString","description","BB8","runValue","schedule","enableBB8","applyForNewRun","clearTimeout","random","run","getRandom","bb8","marginRight","window","outerWidth","ConfigRow","Buttons","onClose","onClick","SLIDES","0","1","2","ConfigBox","toggleCarousel","toggleBB8","totalSlides","setShowOnlySlide","toggleCustomGeolocation","lat","lon","customGeolocation","setLat","setLon","configRow","htmlFor","onChange","checked","id","e","target","selectedIndex","disabled","arr","i","makeOptions","item","buttons","BurgerButton","Config","active","setActive","burgerButton","configBox","fbConnect","auth","apiKey","authDomain","databaseURL","storageBucket","signInAnonymously","catch","error","TimeCard","createTimeObject","toString","split","splice","join","time","AppHeader","timeCard","saveLocalCache","object","loadLocalCache","App","setLatOrLong","defineProperty","local","location","reload","appHeader","board","notification_Notification","config_config","alert","ReactDOM","render","src_App_0","document","getElementById","navigator","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller"],"mappings":"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","file":"static/js/main.1b994f7d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Badge = ({ value }) => {\n  const statusClass = value === 'busy' ? 'badge-red' : 'badge-green'\n  return (\n    <div className={`badge ${statusClass}`}>\n      {value}\n    </div>\n  )\n}\nexport default Badge\n","import React from 'react'\nconst Badge = () => {\n  return (\n    <div className={`badge`}>\n      <div className=\"badge-bugs\" />\n    </div>\n  )\n}\nexport default Badge\n","export const ENV_NAMES = {\n  'esd': 'SSF',\n  'cmdb': 'CMDB',\n  'mm': 'SSP',\n  'MM_stage': 'SSP STAGE',\n  'MM_stage2': 'SSP STAGE2',\n  'MM_us': 'SSP US',\n  'MM_eu': 'SSP EU',\n}\n","import React from 'react'\nimport Badge from '../tools/badge'\nimport BugsBadge from '../tools/bugsBadge'\nimport { ENV_NAMES } from \"../tools/envNames\"\n\nconst CardHeader = ({ type, env, bugs }) => {\n  return (\n    <div className={`card-header ${bugs ? 'bugs-style' : ''}`}>\n      <div className={'env-name'}>{ENV_NAMES[env] || env}</div>\n      {bugs ? <BugsBadge /> : <Badge value={'busy'} />}\n    </div>\n  )\n}\n\nexport default CardHeader\n","import React from 'react'\n\nconst CardBody = ({ children }) => {\n  return (\n    <div className=\"card-body\">\n      {children}\n    </div>\n  )\n}\n\nexport default CardBody\n","export const FIELDS = {\n  deploys: ['user', 'branch', 'tag', 'updated', 'date'],\n  installation: ['user', 'branch', 'tag', 'version', 'updated', 'date'],\n  tests: ['date', 'updated']\n}\n\nexport const SKIP_FIELDS = {\n  deploys: { date: 1 },\n  installation: { date: 1, branch: 1, tag: 1 },\n  tests: {}\n}\n\nexport const getFields = type => {\n  return FIELDS[type] || null\n}\n","export const testState = {\n  FAIL: 'fail',\n  PASS: 'pass',\n  RUN: 'running'\n}\n","import React from 'react'\n\nconst User = ({ user, date }) => {\n  const cleanUser = user.replace('/', '')\n  return (\n    <div className=\"user-card\">\n      <div className=\"image-holder\">\n        <img\n          alt=\"user\"\n          src={`https://avatars1.githubusercontent.com/${cleanUser}`}\n        />\n      </div>\n      <div className=\"user-holder\">\n        <div className=\"name-holder\">\n          {cleanUser}\n        </div>\n        <div className=\"user-date\">\n          {date}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default User\n","import React, { Component } from 'react'\nimport { buildTimeStr } from '../tools/timeStampParser'\n\nexport default class TimeAgo extends Component {\n  state = { timeAgo: '--' }\n\n  calculateTime() {\n    const { timestamp } = this.props\n    if (timestamp) {\n      const timeAgo = buildTimeStr(timestamp)\n      this.setState({ timeAgo })\n    }\n  }\n\n  timeAgoTimer() {\n    setInterval(() => {\n      this.calculateTime()\n    }, 1000)\n  }\n\n  componentDidMount() {\n    this.timeAgoTimer()\n  }\n\n  render() {\n    return <span>{this.state.timeAgo}</span>\n  }\n}\n","export const buildTimeStr = timestamp => {\n  var delta = new Date().getTime() / 1000 - timestamp\n  var days = Math.floor(delta / 86400)\n  delta -= days * 86400\n  var hrs = Math.floor(delta / 3600) % 24\n  delta -= hrs * 3600\n  var mnts = Math.floor(delta / 60) % 60\n  delta -= mnts * 60\n  var secs = Math.floor(delta % 60)\n  return `${days ? `${days}d` : ''} ${hrs ? `${hrs}h` : ''} ${mnts\n    ? `${mnts}m`\n    : ''} ${secs ? `${secs}s` : ''} ago`\n}\n","import React from 'react'\nimport { getFields, SKIP_FIELDS } from '../tools/fields'\nimport User from './user'\nimport TimeAgo from '../tools/TimeAgo'\n\nconst getValue = (field, data) => {\n  if (field === 'updated' && data.timestamp) return <TimeAgo timestamp={data.timestamp} />\n  if (field === 'user') return <User user={data.user} date={data.date} />\n  return data[field]\n}\n\nconst getField = (field, data, type) => {\n  if (field === 'user') return <li key={field}>{getValue(field, data)}</li>\n\n  return (\n    <li key={field}>\n      <span className=\"list-key\">{field}:</span>\n      <span className=\"list-val\">{getValue(field, data)}</span>\n    </li>\n  )\n}\n\nconst FieldsList = ({ type, data }) => {\n  const fields = getFields(type)\n  const to_skip = SKIP_FIELDS[type] || {}\n  if (!fields)\n    return (\n      <ul>\n        <li>no such type</li>\n      </ul>\n    )\n  return <ul>{fields.map(f => !to_skip[f] && getField(f, data, type))}</ul>\n}\n\nexport default FieldsList\n","import React from 'react'\n\nconst getSeverityStyle = (failed, total) => {\n  const percent = 100 * failed / total\n  if (percent < 5) return \"test-minor\"\n  if (percent >= 5 && percent < 10) return \"test-major\"\n  return \"test-fail\"\n}\n\nconst TestBox = ({ name, failed, total }) => {\n  const statusClass = failed === 0 ? \"test-success\" : getSeverityStyle(failed, total)\n  return (\n    <ul className={`test-thread-box ${statusClass}`}>\n      <li className='test-thread-name'>{name}</li>\n      <li className='test-thread-value'>{`${failed}/${total}`}</li>\n    </ul>\n  )\n}\n\nexport default TestBox\n","import React from 'react'\n\nconst TestLoadingBox = () => {\n  return (\n    <ul className={'test-thread-box'}>\n      <li className='test-thread-loading'>\n        <div className='bouncing_loading'>\n          <div className='bounce1' />\n          <div className='bounce2' />\n          <div className='bounce3' />\n        </div>\n      </li>\n    </ul>\n  )\n}\n\nexport default TestLoadingBox\n","import React from 'react'\nimport TestBox from './testBox'\nimport TestLoadingBox from './testLoadingBox'\n\nconst testsStatusText = (status) => {\n  switch (status) {\n    case 'fail':\n      return 'Failed'\n    case 'pass':\n      return 'Passed'\n    case 'running':\n      return 'Running...'\n    default:\n      return ''\n  }\n}\n\nconst running = (threadsRunning) => {\n  return Object.keys(threadsRunning).some(t => threadsRunning[t])\n}\n\nconst getComponent = (component, key) => {\n  return <li key={key} className='thread-box'>{component}</li>\n}\n\nconst renderTestBoxes = (browsers, threadsRunning) => {\n  const browsersCount = Object.keys(browsers).length\n  if (browsersCount === 0)\n    return getComponent(<TestLoadingBox />, 1)\n\n  let boxes = []\n\n  Object.keys(browsers).forEach(browser => {\n    const browserData = browsers[browser]\n    boxes.push(getComponent(<TestBox key={browser} name={browser} failed={browserData.failed} total={browserData.total} />, browser))\n  })\n\n  if (running(threadsRunning))\n    boxes.push(getComponent(<TestLoadingBox key={browsersCount + 1} />, browsersCount + 1))\n\n  return boxes\n}\n\nconst TestsBody = ({ browsers, threadsRunning, date, status }) => {\n  return (\n    <div className='tests-body'>\n      <div className='tests-inner-body'>\n        <div className='tests-header-container'>\n          <div className='tests-header'>Test Status</div>\n          <div className={`tests-status st-status-${status}`}>{testsStatusText(status)}</div>\n        </div>\n        <div className='test-threads-body-container'>\n          <ul className='test-threads-body'>\n            {renderTestBoxes(browsers, threadsRunning)}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TestsBody\n","import React, { Component } from 'react'\nimport '../App.css'\nimport * as firebase from 'firebase'\nimport CardHeader from './cardHeader'\nimport CardBody from './cardBody'\nimport { getFields } from '../tools/fields'\nimport { parseThreadField } from '../tools/threadsDataParser'\nimport { testState } from '../tools/constants'\nimport FieldsList from './fieldsList'\nimport TestsBody from '../tests/testsBody'\n\nclass Card extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: '--',\n      date: '--',\n      branch: '--',\n      tag: '--',\n      version: '--',\n      timestamp: 0,\n      failed: '--',\n      passed: '--',\n      threadsRunning: {},\n      browsers: {}\n    }\n  }\n\n  createStateObj(data, env, browsers, threadsRunning, status) {\n    return {\n      user: (data[env] && data[env].user) || 'n/a',\n      date: (data[env] && data[env].date) || 'n/a',\n      branch: (data[env] && data[env].branch) || 'n/a',\n      timestamp: (data[env] && data[env].timestamp) || 0,\n      version: (data[env] && data[env].version) || 'n/a',\n      tag: (data[env] && data[env].tag) || 'n/a',\n      browsers,\n      threadsRunning,\n      status\n    }\n  }\n\n  testsRunning(threads) {\n    return Object.keys(threads).some(t => threads[t])\n  }\n\n  testsFailed(browsers) {\n    return Object.keys(browsers).some(browser => browsers[browser].failed > 0)\n  }\n\n  componentDidMount() {\n    const { env, type } = this.props\n    if (!type && !env) {\n      return\n    }\n    var db = firebase\n      .database()\n      .ref()\n      .child(type)\n\n    db.on('value', snap => {\n      let data = snap.val()\n      let status = testState.RUN\n      if (!data) {\n        data = JSON.parse(localStorage.getItem(type))\n      }\n      // localStorage.setItem(type, JSON.stringify(data));\n      const browsers = (data[env] && parseThreadField(data[env].browsers)) || {}\n      const threadsRunning = (data[env] && data[env].threads_running) || {}\n      if (\n        !this.testsRunning(threadsRunning) &&\n        Object.keys(browsers).length > 0\n      )\n        status = this.testsFailed(browsers) ? testState.FAIL : testState.PASS\n      this.setState(\n        this.createStateObj(data, env, browsers, threadsRunning, status)\n      )\n    })\n  }\n\n  extractDataFromState(type) {\n    const fieldsData = getFields(type) || []\n    const { browsers, threadsRunning, timestamp } = this.state\n    return fieldsData.reduce(\n      (data, f) => {\n        data[f] = this.state[f]\n        return data\n      },\n      { browsers, threadsRunning, timestamp }\n    )\n  }\n\n  render() {\n    const { env, type, tests } = this.props\n    const { status } = this.state\n    const data = this.extractDataFromState(type)\n    return (\n      <div className=\"card\">\n        <CardHeader type={type} env={env} />\n        <CardBody>\n          <FieldsList type={type} data={data} />\n        </CardBody>\n        {tests && (\n          <TestsBody\n            browsers={data.browsers}\n            threadsRunning={data.threadsRunning}\n            date={new Date(data.timestamp * 1000)}\n            status={status}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Card\n","export const parseThreadField = function(browsers) {\n  if (!browsers) return\n  const newObj = {}\n  Object.keys(browsers).forEach(browser => {\n      let total = 0\n      let failed = 0\n      newObj[browser] = {}\n      Object.keys(browsers[browser]).forEach(thread => {\n          const threadData = browsers[browser][thread]\n          total = total + parseInt(threadData.total, 0)\n          failed = failed + parseInt(threadData.failed, 0)\n        }\n      )\n\n      newObj[browser].total = total\n      newObj[browser].failed = failed\n    }\n  )\n  return newObj\n}\n","import React, {Component} from 'react'\n\nclass Carousel extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      slidesCount: props.children({}).length,\n      showIndex: 0,\n      windowWidth: 0,\n      timer: null,\n      offSet:50,\n      timerValue: 30000,\n    }\n  }\n\n  enableTimer ( ) {\n    const timer = setInterval(() => {\n      this.setState({showIndex: (this.state.showIndex +1 ) % this.state.slidesCount})\n    }, this.state.timerValue)\n    return timer\n  }\n\n  componentDidMount(props) {\n    const { enableCarousel, showOnlySlide } = this.props\n    if (!enableCarousel) {\n      this.setState({ showIndex: showOnlySlide })\n      return\n    }\n    const timer = this.enableTimer()\n    this.setState({timer})\n    this.props.setTotalSlides(this.state.slidesCount)\n  }\n\n  componentWillReceiveProps(nextProps) {\n\n    if (nextProps.enableCarousel !== this.props.enableCarousel) {\n      if ( nextProps.enableCarousel ) {\n        const timer = this.enableTimer()\n        this.setState({timer})\n        console.log('Carousel enable timer')\n      } else {\n        console.log('Carousel disable timer')\n        clearInterval(this.state.timer)\n      }\n    }\n\n    if (! this.props.enableCarousel && nextProps.showOnlySlide !== this.props.showOnlySlide) {\n      console.log('set default slide')\n      this.setState({ showIndex: nextProps.showOnlySlide })\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timer)\n  }\n\n  render() {\n    const { children } = this.props\n    const { showIndex } = this.state\n    const startMargin = this.refs.slideClosure ? this.refs.slideClosure.offsetWidth : 0\n    const margin = -1*( startMargin * showIndex)\n    return (<ul className='carousel' ref='slideClosure'>{children({ showIndex, margin })}</ul>)\n  }\n}\n\nexport default Carousel\n","import React from  'react'\n\nconst Slide = ({ children, style }) => (<li style={{'transition': 'all 0.5s cubic-bezier(0.43, 0.2, 0.96, 0.99)',...style}} className=\"slide\">{children}</li>)\n\nexport default Slide\n","import React from 'react'\nimport { ENV_NAMES } from '../tools/envNames'\n\nconst StatusBlock = ({ data, envName }) => {\n  data = data || {}\n  const { dirty, user } = data[envName] || 0\n  const classStatus = dirty ? 'busy' : 'free'\n  const displayStatus = dirty ? 'dirty' : 'clean'\n  const displayUser = user\n  return (\n    <div className={'statusBlock'}>\n      <div className={'st-name'}>{ENV_NAMES[envName]}</div>\n      <div className={`st-value ${classStatus}`}>{displayStatus}</div>\n      {dirty && <div className={'st-user busy'}>{displayUser}</div>}\n    </div>\n  )\n}\n\nexport default StatusBlock\n","import React from 'react'\nimport StatusBlock from './statusBlock'\nimport * as firebase from 'firebase'\n\nexport default class Header extends React.Component {\n  state = { data: null }\n  componentDidMount() {\n    const db = firebase\n      .database()\n      .ref()\n      .child('master_status')\n\n    db.on('value', snap => {\n      let data = snap.val()\n      this.setState({ data })\n    })\n  }\n\n  render() {\n    const { title } = this.props\n\n    return (\n      <div className={'header'}>\n        <ul className={'header-list'}>\n          <li className={'main-title'}> {title} </li>\n          <li>\n            <StatusBlock {...this.state} envName={'cmdb'} />\n          </li>\n          <li>\n            <StatusBlock {...this.state} envName={'esd'} />\n          </li>\n          <li>\n            <StatusBlock {...this.state} envName={'mm'} />\n          </li>\n        </ul>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport axios from 'axios'\nimport CardHeader from './cardHeader'\nimport CardBody from './cardBody'\n// import Emoji from '../tools/emoji'\nimport TestLoadingBox from '../tests/testLoadingBox'\n\nexport default class extends React.Component {\n  state = {\n    total: null,\n    data: null,\n    constLinks: {\n      SMILE: 1,\n      SAD: 2,\n      HYSTERICAL: 3,\n      BLOCK_GOOD: 5,\n      BLOCK_BAD: 10,\n      QUE_GOOD: 60,\n      QUE_BAD: 80,\n      BUGS_URL: 'https://samanage-node-proxy.herokuapp.com/',\n      SSF_BLOCK: 'SSF',\n      SSP_BLOCK: 'SSP',\n      SSP_ALL: 'SSP-ALL',\n      SSF_ALL: 'SSF-ALL'\n    }\n  }\n\n  getData = () => {\n    const { type } = this.props\n    const { constLinks } = this.state\n    const { BUGS_URL } = constLinks\n    axios\n      .get(`${BUGS_URL}${constLinks[type]}`)\n      .then(resp =>\n        this.setState({ total: resp.data.Items.length, data: resp.data.Items })\n      )\n  }\n  componentDidMount() {\n    this.getData()\n    this.timer = setInterval(() => {\n      this.getData()\n    }, 1800000)\n  }\n\n  componentWillMount() {\n    clearInterval(this.timer)\n  }\n  getLevel(value) {\n    const { type } = this.props\n    const { constLinks } = this.state\n    const { SMILE, SAD, HYSTERICAL } = constLinks\n    const [_GOOD, _BAD] = type.match(/BLOCK/gi)\n      ? [constLinks.BLOCK_GOOD, constLinks.BLOCK_BAD]\n      : [constLinks.QUE_GOOD, constLinks.QUE_BAD]\n\n    return value < _GOOD\n      ? SMILE\n      : value >= _GOOD && value <= _BAD\n      ? SAD\n      : HYSTERICAL\n  }\n  render() {\n    const { env, type } = this.props\n    const { total } = this.state\n    const level = this.getLevel(total || 0)\n    return (\n      <div className=\"card\">\n        <CardHeader env={env} type={type} bugs />\n\n        <CardBody>\n          {total === null ? (\n            <TestLoadingBox />\n          ) : (\n            <div className=\"bugs-stat-view\">\n              <div className={`number color-bugs-${level}`}>{total}</div>\n              <div className={`level emoji-level-${level}`} />\n            </div>\n          )}\n        </CardBody>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Card from '../cards/Card'\nimport Carousel from './Carousel'\nimport Slide from './Slide'\nimport Header from '../header/header'\nimport '../App.css'\nimport BugCard from '../cards/BugCard'\n\nconst Board = ({ enableCarousel, setTotalSlides, showOnlySlide }) => {\n  return (\n    <div className=\"simple-board\">\n      <Header title={'master status'} />\n      <Carousel\n        showOnlySlide={showOnlySlide}\n        enableCarousel={enableCarousel}\n        setTotalSlides={setTotalSlides}\n      >\n        {({ showIndex, margin }) => {\n          return [\n            <Slide style={{ marginLeft: margin }} key=\"1\">\n              <Card type=\"deploys\" env=\"review\" />\n              <Card type=\"deploys\" env=\"build\" />\n              <Card type=\"installation\" env=\"dev10\" />\n              <Card type=\"tests\" env=\"NewDev12\" tests />\n              <Card type=\"tests\" env=\"CMDB\" tests />\n            </Slide>,\n            <Slide key=\"2\">\n              <Card type=\"tests\" env=\"MM_stage\" tests />\n              {/* <Card type=\"tests\" env=\"MM_stage2\" tests /> */}\n              <Card type=\"tests\" env=\"MM_us\" tests />\n              <Card type=\"tests\" env=\"MM_eu\" tests />\n            </Slide>,\n\n            <Slide key=\"3\">\n              <BugCard type=\"SSP_BLOCK\" env=\"SSP BLOCKERS\" />\n              <BugCard type=\"SSF_BLOCK\" env=\"SSF BLOCKERS\" />\n              <BugCard type=\"SSF_ALL\" env=\"SSF BUGS IN QUEUE\" />\n              <BugCard type=\"SSP_ALL\" env=\"SSP BUGS IN QUEUE\" />\n            </Slide>\n          ]\n        }}\n      </Carousel>\n    </div>\n  )\n}\n\nexport default Board\n","import React, { Component } from 'react'\n\nexport default class Notification extends Component {\n  state = { samboardKey: 'samboardKey', show: false }\n\n  activateSlide() {\n    setTimeout(() => {\n      this.setState({ fxClass: 'n-msg-slide' })\n    }, 2000)\n  }\n\n  activateSelfKill() {\n    setTimeout(() => {\n      this.setState({ show: false })\n    }, 10000)\n  }\n\n  componentDidMount() {\n    const { samboardKey } = this.state\n    const ver = require('../vesrion_data.json')\n    const old = JSON.parse(localStorage.getItem(samboardKey)) || {}\n    if (ver.version && ver.version !== old.version) {\n      this.setState({ show: true, ver })\n      localStorage.setItem(samboardKey, JSON.stringify(ver))\n      this.activateSlide()\n      this.activateSelfKill()\n    }\n  }\n\n  render() {\n    const { ver, show, fxClass } = this.state\n    return show ? (\n      <div className={`n-msg ${fxClass ? fxClass : ''}`}>\n        <div className=\"n-msg-header\">\n          {`${ver.type} - Build(${new Date(\n            parseInt(ver.version,10)\n          ).toLocaleDateString()})`}\n        </div>\n        <div className=\"n-msg-body\">{ver.description}</div>\n      </div>\n    ) : null\n  }\n}\n","import React, { Component } from 'react'\n\nclass BB8 extends Component{\n  state = { runValue: -100, timer: null, schedule:null }\n\n  componentDidMount(props) {\n    this.props.enableBB8 && this.applyForNewRun()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.enableBB8 !== this.props.enableBB8) {\n      if ( nextProps.enableBB8 ) {\n        this.applyForNewRun()\n        console.log('enable bb8')\n      } else {\n        clearTimeout(this.state.schedule)\n        clearInterval(this.state.timer)\n        console.log('disable bb8')\n      }\n    }\n  }\n\n  getRandom() {\n    return Math.floor(Math.random() * 30) + 1\n  }\n\n  applyForNewRun() {\n    const timerSchedule = setTimeout(() => {\n      this.run()\n    }, this.getRandom() * 60000 )\n    return timerSchedule\n  }\n  \n  run() {\n    const timer = setInterval(() => {\n      this.refs.bb8.style.marginRight = this.state.runValue + 'px'\n      this.setState({runValue: this.state.runValue + 2 }, () => {\n        if (this.state.runValue > window.outerWidth + 100) {\n          clearInterval(this.state.timer)\n          const schedule = this.applyForNewRun()\n          this.setState({runValue: -100, timer: null, schedule })\n        }\n      })\n    }, 5)\n\n    this.setState({ timer })\n  }\n\n  render () {\n    const { enableBB8 } = this.props\n    const { timer } = this.state\n    if (!timer || !enableBB8) return null\n    return (\n      <div ref={'bb8'} className=\"move-bb8\">\n        <div className=\"bb8\"></div>\n      </div>\n    )\n  }\n}\n\nexport default BB8\n","import React from 'react'\n\nconst ConfigRow = ({ children }) => {\n  return (\n    <div className=\"cfg-row\">\n      {children}\n    </div>\n  )\n}\n\nexport default ConfigRow\n","import React from 'react'\n\nconst Buttons = ({ onClose }) => {\n  return (\n    <div className={'close-holder'} onClick={onClose}>\n      <div className={'close'}>{'Done'}</div>\n    </div>\n  )\n}\n\nexport default Buttons\n","import React from 'react'\nimport ConfigRow from './configRow'\nimport Buttons from './buttons'\n\nconst SLIDES = {\n  0: 'SSF',\n  1: 'SSP',\n  2: 'Bugs'\n}\n\nconst makeOptions = value => {\n  const arr = []\n  for (let i = 0; i < value; i++) {\n    arr.push(i)\n  }\n  return arr\n}\n\nconst ConfigBox = ({\n  onClose,\n  toggleCarousel,\n  toggleBB8,\n  enableCarousel,\n  enableBB8,\n  totalSlides,\n  setShowOnlySlide,\n  showOnlySlide,\n  toggleCustomGeolocation,\n  lat,\n  lon,\n  customGeolocation,\n  setLat,\n  setLon\n}) => {\n  return (\n    <div className=\"config-box\">\n      <div className={'config-header'}>{'Configuration'}</div>\n      <div className={'basic-config-box'}>\n        <ConfigRow>\n          <label htmlFor=\"enableCarousel\">Enable Carousel</label>\n          <input\n            name=\"enableCarousel\"\n            onChange={toggleCarousel}\n            checked={enableCarousel}\n            id=\"enableCarousel\"\n            type=\"checkbox\"\n          />\n        </ConfigRow>\n\n        <ConfigRow>\n          <label\n            className={enableCarousel ? 'opacity' : ''}\n            htmlFor=\"onlySlide\">\n            Show Only\n          </label>\n          <select\n            onChange={e => setShowOnlySlide(e.target.selectedIndex)}\n            id=\"onlySlide\"\n            name=\"onlySlide\"\n            disabled={enableCarousel}\n            value={showOnlySlide}>\n            {makeOptions(totalSlides).map(item => (\n              <option key={item} value={item}>{SLIDES[item]}</option>\n            ))}\n          </select>\n        </ConfigRow>\n\n        <ConfigRow>\n          <label htmlFor=\"enableBB-8\">Enable BB-8</label>\n          <input\n            id=\"enableBB-8\"\n            onChange={toggleBB8}\n            checked={enableBB8}\n            name=\"enableBB-8\"\n            type=\"checkbox\"\n          />\n        </ConfigRow>\n      </div>\n\n      <div className={'basic-config-box'}>\n        <ConfigRow>\n          <div className=\"cfg-row\">\n            <label htmlFor=\"enable-custom-geolocation\">\n              Enable Custom Geolocation\n            </label>\n            <input\n              id=\"enable-custom-geolocation\"\n              onChange={toggleCustomGeolocation}\n              checked={customGeolocation}\n              name=\"enable-custom-geolocation\"\n              type=\"checkbox\"\n            />\n          </div>\n          <div className=\"cfg-row\">\n            <label\n              className={!customGeolocation ? 'opacity' : ''}\n              htmlFor=\"lat\">\n              Latitude\n            </label>\n            <input\n              className\n              disabled={!customGeolocation}\n              id=\"lat\"\n              onChange={e => setLat(e.target.value)}\n              name=\"lat\"\n              type=\"text\"\n              value={lat}\n            />\n          </div>\n          <div className=\"cfg-row\">\n            <label\n              className={!customGeolocation ? 'opacity' : ''}\n              htmlFor=\"lon\">\n              Longitude\n            </label>\n            <input\n              disabled={!customGeolocation}\n              id=\"lon\"\n              onChange={e => setLon(e.target.value)}\n              name=\"lon\"\n              type=\"text\"\n              value={lon}\n            />\n          </div>\n        </ConfigRow>\n      </div>\n\n      <Buttons onClose={onClose} />\n    </div>\n  )\n}\n\nexport default ConfigBox\n","import React from 'react'\n\nconst BurgerButton = ({ onClick }) => {\n  return (\n    <div className=\"config-button-🍔\" onClick={onClick}>\n      <div />\n      <div />\n      <div />\n    </div>\n  )\n}\n\nexport default BurgerButton\n","import React, { Component } from 'react'\nimport ConfigBox from './configBox'\nimport BurgerButton from './burgerButton'\nclass Config extends Component {\n  state = {\n    active: false,\n    enableCarousel: true,\n    enableBB8: false\n  }\n\n  setActive = () => {\n    this.setState({\n      active: !this.state.active\n    })\n  }\n\n  render() {\n    const { active } = this.state\n    const {\n      toggleCarousel,\n      toggleBB8,\n      enableBB8,\n      enableCarousel,\n      totalSlides,\n      setShowOnlySlide,\n      showOnlySlide,\n      toggleCustomGeolocation,\n      lat,\n      lon,\n      customGeolocation,\n      setLat,\n      setLon\n    } = this.props\n    return (\n      <div>\n        <BurgerButton onClick={this.setActive} />\n        {active && (\n          <ConfigBox\n            toggleCarousel={toggleCarousel}\n            toggleBB8={toggleBB8}\n            onClose={this.setActive}\n            enableBB8={enableBB8}\n            enableCarousel={enableCarousel}\n            totalSlides={totalSlides}\n            showOnlySlide={showOnlySlide}\n            setShowOnlySlide={setShowOnlySlide}\n            toggleCustomGeolocation={toggleCustomGeolocation}\n            lat={lat}\n            lon={lon}\n            customGeolocation={customGeolocation}\n            setLat={setLat}\n            setLon={setLon}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Config\n","import * as firebase from 'firebase'\n\nconst fbConnect = () => {\n  var config = {\n    auth: 'AIzaSyCDrjqOVXidkdekquE4MumZAkR9sY5VP94',\n    apiKey: 'AIzaSyCDrjqOVXidkdekquE4MumZAkR9sY5VP94',\n    authDomain: 'sam-esd-status.firebaseapp.com',\n    databaseURL: 'https://sam-esd-status.firebaseio.com',\n    storageBucket: 'sam-esd-status.appspot.com'\n  }\n  firebase.initializeApp(config)\n  firebase.auth().signInAnonymously().catch(function(error) {\n    console.log(error)\n  })\n}\n\nexport default fbConnect\n","import React, { Component } from 'react'\nimport '../App.css'\n\nclass TimeCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = this.createTimeObject()\n  }\n\n  createTimeObject() {\n    return {\n      date: new Date().toString().split(' ').splice(0, 3).join(' '),\n      time: new Date().toString().split(' ')[4]\n    }\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState(this.createTimeObject())\n    }, 1000)\n  }\n\n  render() {\n    return (\n      <div className=\"time-card\">\n        <div className=\"date\">\n          {this.state.date}\n        </div>\n        <div className=\"time\">\n          {this.state.time}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TimeCard\n","import React from 'react'\nimport TimeCard from '../cards/timeCard'\n// import Weather from '../cards/weather'\nconst AppHeader = ({ lat, lon, customGeolocation }) => {\n  return (\n    <div className=\"App-header\">\n      <div className=\"logo-holder\">\n        <h2 className=\"brand\">Sam</h2>\n        <h2 className=\"brand second\">Hub</h2>\n      </div>\n      <div className=\"side-right\">\n        {/* <Weather lat={lat} lon={lon} customGeolocation={customGeolocation}/> */}\n        <TimeCard />\n      </div>\n    </div>\n  )\n}\n\nexport default AppHeader\n","const LOCAL_CACHE_KEY = 'sam-hub'\n\nexport const saveLocalCache = object => {\n  localStorage.setItem(LOCAL_CACHE_KEY, JSON.stringify(object))\n}\n\nexport const loadLocalCache = () => {\n  return JSON.parse(localStorage.getItem(LOCAL_CACHE_KEY)) || null\n}\n","import React, { Component } from 'react'\nimport './App.css'\nimport Board from './board/board'\nimport Notification from './cards/notification'\nimport BB8 from './cards/bb8'\nimport Config from './config/config'\nimport fbConnect from './firebase/fb_config'\nimport AppHeader from './header/appHeader'\nimport { saveLocalCache, loadLocalCache } from './tools/cacheTool'\n\nconst activateSelfReboot = () => {\n  setTimeout(() => {\n    window.location.reload()\n  }, 86400000)\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    fbConnect()\n    const local = loadLocalCache()\n    const defaultState = {\n      enableCarousel: true,\n      enableBB8: true,\n      showOnlySlide: 0,\n      totalSlides: 0,\n      customGeolocation: false,\n      lat: 0,\n      lon: 0\n    }\n    this.state = { ...(local ? local : defaultState) }\n    if (!local) {\n      saveLocalCache(this.state)\n    }\n  }\n\n  toggleCustomGeolocation = () => {\n    this.setState(\n      {\n        customGeolocation: !this.state.customGeolocation\n      },\n      () => saveLocalCache(this.state)\n    )\n  }\n\n  setShowOnlySlide = value => {\n    this.setState(\n      {\n        showOnlySlide: value\n      },\n      () => saveLocalCache(this.state)\n    )\n  }\n\n  toggleCarousel = () => {\n    this.setState(\n      {\n        enableCarousel: !this.state.enableCarousel\n      },\n      () => saveLocalCache(this.state)\n    )\n  }\n\n  toggleBB8 = () => {\n    this.setState(\n      {\n        enableBB8: !this.state.enableBB8\n      },\n      () => saveLocalCache(this.state)\n    )\n  }\n\n  setTotalSlides = value => {\n    this.setState(\n      {\n        totalSlides: value\n      },\n      () => saveLocalCache(this.state)\n    )\n  }\n\n  setLatOrLong = type => value => {\n    this.setState(\n      {\n        [type]: value\n      },\n      () => saveLocalCache(this.state)\n    )\n  }\n\n  componentDidMount() {\n    activateSelfReboot()\n  }\n\n  render() {\n    const {\n      enableBB8,\n      enableCarousel,\n      totalSlides,\n      showOnlySlide,\n      customGeolocation,\n      lat,\n      lon\n    } = this.state\n    return (\n      <div className=\"App\">\n        <AppHeader lat={lat} lon={lon} customGeolocation={customGeolocation} />\n        <div>\n          <Board\n            enableCarousel={enableCarousel}\n            setTotalSlides={this.setTotalSlides}\n            showOnlySlide={showOnlySlide}\n          />\n          <Notification />\n          <BB8 enableBB8={enableBB8} />\n          <Config\n            toggleCarousel={this.toggleCarousel}\n            toggleBB8={this.toggleBB8}\n            enableBB8={enableBB8}\n            enableCarousel={enableCarousel}\n            setShowOnlySlide={this.setShowOnlySlide}\n            totalSlides={totalSlides}\n            showOnlySlide={showOnlySlide}\n            toggleCustomGeolocation={this.toggleCustomGeolocation}\n            customGeolocation={customGeolocation}\n            lat={lat}\n            lon={lon}\n            setLat={this.setLatOrLong('lat')}\n            setLon={this.setLatOrLong('lon')}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport './index.css'\nimport './weather.css'\nalert('here')\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}